name: "Nixpkgs, Linux"
on:
  # On Git changes in PR
  pull_request:
  # On Git changes of the master
  push:
    branches:
      - master
  schedule:
    # Every day at 03:45
    - cron: "45 03 * * *"

env:
  ###
  ### NOTE: This configuration uses `build.sh` interface, which uses `default.nix` interface, which exposes the Nixpkgs Haskell Lib interface.
  ###
  ### Documentation of this settings is mosly in `default.nix`, since most settings it Nixpkgs related
  ### and the other part of keys explained in `build.sh`, since those address external procedures aound the builds.
  ### Additional documentation is in Nixpkgs Haskell.lib: https://github.com/NixOS/nixpkgs/blob/master/pkgs/development/haskell-modules/lib.nix
  ###
  useRev: "true"
  rev: "nixos-unstable"
  cachixAccount: "replaceWithProjectNameInCachix"
  allowInconsistentDependencies: "false"
  doJailbreak: "false"
  doCheck: "true"
  sdistTarball: "false"
  buildFromSdist: "false"
  buildStrictly: "false"
  failOnAllWarnings: "false"
  enableDeadCodeElimination: "false"
  disableOptimization: "true"
  linkWithGold: "true"
  enableLibraryProfiling: "false"
  enableExecutableProfiling: "false"
  doTracing: "false"
  enableDWARFDebugging: "false"
  doStrip: "false"
  enableSharedLibraries: "true"
  enableStaticLibraries: "false"
  enableSharedExecutables: "false"
  justStaticExecutables: "false"
  enableSeparateBinOutput: "false"
  checkUnusedPackages: "false"
  doHaddock: "false"
  doHyperlinkSource: "false"
  doCoverage: "false"
  doBenchmark: "false"
  generateOptparseApplicativeCompletions: "false"
  executableNamesToShellComplete: '[ "replaceWithExecutableName" ]'

jobs:
  build10:
    name: Nixpkgs-unstable channel, default GHC (8.8.3)
    runs-on: ubuntu-latest
    continue-on-error: true
    env:
      rev: "nixpkgs-unstable"
    steps:
    - name: Git checkout
      uses: actions/checkout@v2
    - name: Install Nix
      uses: cachix/install-nix-action@v10
    - name: Determined nix-build
      run: ./build.sh
  build20:
    name: NixOS-unstable channel, Strict build, default GHC (8.8.3)
    runs-on: ubuntu-latest
    continue-on-error: true
    env:
      buildStrictly: "true"
    steps:
    - name: Git checkout
      uses: actions/checkout@v2
    - name: Install Nix
      uses: cachix/install-nix-action@v10
    - name: Determined nix-build
      run: ./build.sh
  build30:
    name: NixOS 20.03 stable channel, default GHC (8.8.3)
    runs-on: ubuntu-latest
    continue-on-error: true
    env:
      rev: "nixos-20.03"
    steps:
    - name: Git checkout
      uses: actions/checkout@v2
    - name: Install Nix
      uses: cachix/install-nix-action@v10
    - name: Determined nix-build
      run: ./build.sh
  build40:
    name: Custom: SDist, Optimize, Benchmark, Haddock, GHC 8.10.1
    runs-on: ubuntu-latest
    continue-on-error: true
    env:
      compiler: "ghc8101"
      buildFromSdist: "true"
      linkWithGold: "true"
      doHaddock: "true"
      doHyperlinkSource: "true"
      doBenchmark: "true"
      disableOptimization: "false"
      enableDeadCodeElimination: "true"
      generateOptparseApplicativeCompletions: "false"
    steps:
    - name: Git checkout
      uses: actions/checkout@v2
    - name: Install Nix
      uses: cachix/install-nix-action@v10
    - name: Determined nix-build
      run: ./build.sh
  build50:
    name: NixOS-unstable channel, GHC 8.6.5
    runs-on: ubuntu-latest
    continue-on-error: true
    env:
      compiler: "ghc865"
    steps:
    - name: Git checkout
      uses: actions/checkout@v2
    - name: Install Nix
      uses: cachix/install-nix-action@v10
    - name: Determined nix-build
      run: ./build.sh
  build60:
    name: NixOS-unstable channel, GHC 8.4.4
    runs-on: ubuntu-latest
    continue-on-error: true
    env:
      compiler: "ghc844"
    steps:
    - name: Git checkout
      uses: actions/checkout@v2
    - name: Install Nix
      uses: cachix/install-nix-action@v10
    - name: Determined nix-build
      run: ./build.sh
