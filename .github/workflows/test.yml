name: "CI"
on:
  pull_request:
  push:

env:
  ###
  ### NOTE: This configuration uses `build.sh` interface, which uses `default.nix` interface, which exposes the Nixpkgs Haskell Lib interface.
  ###
  ### Documentation of this settings is mosly in `default.nix`, since most settings it Nixpkgs related
  ### and the other part of keys explained in `build.sh`, since those address external procedures aound the builds.
  ### Additional documentation is in Nixpkgs Haskell.lib: https://github.com/NixOS/nixpkgs/blob/master/pkgs/development/haskell-modules/lib.nix
  ###
  #
  # - rev: nixos-unstable
  # - NIX_PATH: "nixpkgs: https://github.com/nixos/nixpkgs/archive/$rev.tar.gz"
  project: "replaceWithProjectNameInCachix"
  allowInconsistentDependencies: "false"
  doJailbreak: "false"
  doCheck: "true"
  sdistTarball: "false"
  buildFromSdist: "false"
  buildStrictly: "false"
  failOnAllWarnings: "false"
  enableDeadCodeElimination: "false"
  disableOptimization: "true"
  linkWithGold: "false"
  enableLibraryProfiling: "false"
  enableExecutableProfiling: "false"
  doTracing: "false"
  enableDWARFDebugging: "false"
  doStrip: "false"
  enableSharedLibraries: "true"
  enableStaticLibraries: "false"
  enableSharedExecutables: "false"
  justStaticExecutables: "false"
  enableSeparateBinOutput: "false"
  checkUnusedPackages: "false"
  doHaddock: "false"
  doHyperlinkSource: "false"
  doCoverage: "false"
  doBenchmark: "false"
  generateOptparseApplicativeCompletions: "false"
  executableNamesToShellComplete: '[ "replaceWithExecutableName" ]'
  #
  ghcjsTmpLogFile: "/tmp/ghcjsTmpLogFile.log"
  ghcjsLogTailLength: "10000"

jobs:
  Basic_build:
    runs-on: ubuntu-latest
    steps:
    - name: Import Git checkout
      uses: actions/checkout@v2
    - name: Install Nix
      uses: cachix/install-nix-action@v10
      with:
        nix_path: nixpkgs=channel:nixpkgs-unstable
    - name: Run determined nix-build
      run: ./build.sh
